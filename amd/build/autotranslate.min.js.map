{"version":3,"file":"autotranslate.min.js","sources":["../src/autotranslate.js"],"sourcesContent":["define(['core/ajax', 'core/notification'], function (Ajax, Notification) {\n    /**\n     * Initializes the Autotranslate button on manage.php.\n     *\n     * Sets up the \"Autotranslate\" button to queue tasks via `external.php` when clicked.\n     *\n     * @module filter_autotranslate/autotranslate\n     */\n    function init() {\n        var autotranslatebutton = document.getElementById('autotranslate-button');\n        if (autotranslatebutton) {\n            autotranslatebutton.addEventListener('click', function () {\n                var filterparams = JSON.parse(autotranslatebutton.getAttribute('data-filter-params'));\n                startTask('filter_autotranslate_autotranslate', filterparams);\n            });\n        }\n    }\n\n    /**\n     * Queues a task via the specified webservice.\n     *\n     * Disables the button, shows a progress bar, and calls `external.php` to start the task.\n     *\n     * @param {string} methodname Webservice method (e.g., 'filter_autotranslate_autotranslate').\n     * @param {object} params Filter parameters from manage.php.\n     */\n    function startTask(methodname, params) {\n        var autotranslatebutton = document.getElementById('autotranslate-button');\n        if (autotranslatebutton) {\n            autotranslatebutton.setAttribute('disabled', 'disabled');\n        }\n\n        var progresscontainer = document.getElementById('task-progress');\n        progresscontainer.style.display = 'block';\n        var progressbar = progresscontainer.querySelector('.progress-bar');\n        progressbar.classList.remove('bg-danger');\n        progressbar.classList.add('bg-primary');\n        progressbar.style.width = '0%';\n        progressbar.setAttribute('aria-valuenow', '0');\n        progressbar.textContent = '0%';\n\n        Ajax.call([{\n            methodname: methodname,\n            args: params,\n            done: function (response) {\n                if (response.success && response.taskid) {\n                    Notification.addNotification({\n                        message: 'Task queued successfully. Awaiting completion.',\n                        type: 'success'\n                    });\n                    pollTaskStatus(response.taskid);\n                } else {\n                    Notification.addNotification({\n                        message: response.message || 'Failed to queue task.',\n                        type: 'error'\n                    });\n                    resetUI();\n                }\n            },\n            fail: function (error) {\n                Notification.addNotification({\n                    message: 'Error queuing task: ' + error.message,\n                    type: 'error'\n                });\n                resetUI();\n            }\n        }]);\n    }\n\n    /**\n     * Polls task status and updates the progress bar.\n     *\n     * Calls `filter_autotranslate_task_status` every second to update UI progress.\n     *\n     * @param {number} taskid ID of the task to poll.\n     */\n    function pollTaskStatus(taskid) {\n        Ajax.call([{\n            methodname: 'filter_autotranslate_task_status',\n            args: { taskid: taskid },\n            done: function (response) {\n                var progressbar = document.querySelector('#task-progress .progress-bar');\n                if (progressbar) {\n                    progressbar.style.width = response.percentage + '%';\n                    progressbar.setAttribute('aria-valuenow', response.percentage);\n                    progressbar.textContent = response.percentage + '%';\n\n                    if (response.status === 'failed') {\n                        progressbar.classList.remove('bg-primary');\n                        progressbar.classList.add('bg-danger');\n                    }\n                }\n\n                if (response.status === 'completed') {\n                    Notification.addNotification({\n                        message: 'Task completed. Reloading page...',\n                        type: 'success'\n                    });\n                    setTimeout(function () {\n                        location.reload();\n                    }, 1000);\n                } else if (response.status === 'failed') {\n                    Notification.addNotification({\n                        message: 'Task failed. Check logs for details.',\n                        type: 'error'\n                    });\n                    resetUI();\n                } else {\n                    setTimeout(function () {\n                        pollTaskStatus(taskid);\n                    }, 1000);\n                }\n            },\n            fail: function (error) {\n                Notification.addNotification({\n                    message: 'Error checking status: ' + error.message,\n                    type: 'error'\n                });\n                var progressbar = document.querySelector('#task-progress .progress-bar');\n                if (progressbar) {\n                    progressbar.classList.remove('bg-primary');\n                    progressbar.classList.add('bg-danger');\n                }\n                resetUI();\n            }\n        }]);\n    }\n\n    /**\n     * Resets the UI after task completion or failure.\n     *\n     * Re-enables the button and hides/resets the progress bar.\n     */\n    function resetUI() {\n        var autotranslatebutton = document.getElementById('autotranslate-button');\n        if (autotranslatebutton) {\n            autotranslatebutton.removeAttribute('disabled');\n        }\n\n        var progresscontainer = document.getElementById('task-progress');\n        progresscontainer.style.display = 'none';\n        var progressbar = progresscontainer.querySelector('.progress-bar');\n        if (progressbar) {\n            progressbar.style.width = '0%';\n            progressbar.setAttribute('aria-valuenow', '0');\n            progressbar.textContent = '0%';\n        }\n    }\n\n    return {\n        init: init\n    };\n});"],"names":["define","Ajax","Notification","pollTaskStatus","taskid","call","methodname","args","done","response","progressbar","document","querySelector","style","width","percentage","setAttribute","textContent","status","classList","remove","add","addNotification","message","type","setTimeout","location","reload","resetUI","fail","error","autotranslatebutton","getElementById","removeAttribute","progresscontainer","display","init","addEventListener","params","success","startTask","JSON","parse","getAttribute"],"mappings":"AAAAA,4CAAO,CAAC,YAAa,sBAAsB,SAAUC,KAAMC,uBA4E9CC,eAAeC,QACpBH,KAAKI,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,CAAEH,OAAQA,QAChBI,KAAM,SAAUC,cACRC,YAAcC,SAASC,cAAc,gCACrCF,cACAA,YAAYG,MAAMC,MAAQL,SAASM,WAAa,IAChDL,YAAYM,aAAa,gBAAiBP,SAASM,YACnDL,YAAYO,YAAcR,SAASM,WAAa,IAExB,WAApBN,SAASS,SACTR,YAAYS,UAAUC,OAAO,cAC7BV,YAAYS,UAAUE,IAAI,eAIV,cAApBZ,SAASS,QACThB,aAAaoB,gBAAgB,CACzBC,QAAS,oCACTC,KAAM,YAEVC,YAAW,WACPC,SAASC,WACV,MACwB,WAApBlB,SAASS,QAChBhB,aAAaoB,gBAAgB,CACzBC,QAAS,uCACTC,KAAM,UAEVI,WAEAH,YAAW,WACPtB,eAAeC,UAChB,MAGXyB,KAAM,SAAUC,OACZ5B,aAAaoB,gBAAgB,CACzBC,QAAS,0BAA4BO,MAAMP,QAC3CC,KAAM,cAENd,YAAcC,SAASC,cAAc,gCACrCF,cACAA,YAAYS,UAAUC,OAAO,cAC7BV,YAAYS,UAAUE,IAAI,cAE9BO,uBAUHA,cACDG,oBAAsBpB,SAASqB,eAAe,wBAC9CD,qBACAA,oBAAoBE,gBAAgB,gBAGpCC,kBAAoBvB,SAASqB,eAAe,iBAChDE,kBAAkBrB,MAAMsB,QAAU,WAC9BzB,YAAcwB,kBAAkBtB,cAAc,iBAC9CF,cACAA,YAAYG,MAAMC,MAAQ,KAC1BJ,YAAYM,aAAa,gBAAiB,KAC1CN,YAAYO,YAAc,YAI3B,CACHmB,oBA7IIL,oBAAsBpB,SAASqB,eAAe,wBAC9CD,qBACAA,oBAAoBM,iBAAiB,SAAS,qBAenC/B,WAAYgC,YACvBP,oBAAsBpB,SAASqB,eAAe,wBAC9CD,qBACAA,oBAAoBf,aAAa,WAAY,gBAG7CkB,kBAAoBvB,SAASqB,eAAe,iBAChDE,kBAAkBrB,MAAMsB,QAAU,YAC9BzB,YAAcwB,kBAAkBtB,cAAc,iBAClDF,YAAYS,UAAUC,OAAO,aAC7BV,YAAYS,UAAUE,IAAI,cAC1BX,YAAYG,MAAMC,MAAQ,KAC1BJ,YAAYM,aAAa,gBAAiB,KAC1CN,YAAYO,YAAc,KAE1BhB,KAAKI,KAAK,CAAC,CACPC,WAAYA,WACZC,KAAM+B,OACN9B,KAAM,SAAUC,UACRA,SAAS8B,SAAW9B,SAASL,QAC7BF,aAAaoB,gBAAgB,CACzBC,QAAS,iDACTC,KAAM,YAEVrB,eAAeM,SAASL,UAExBF,aAAaoB,gBAAgB,CACzBC,QAASd,SAASc,SAAW,wBAC7BC,KAAM,UAEVI,YAGRC,KAAM,SAAUC,OACZ5B,aAAaoB,gBAAgB,CACzBC,QAAS,uBAAyBO,MAAMP,QACxCC,KAAM,UAEVI,cAnDAY,CAAU,qCADSC,KAAKC,MAAMX,oBAAoBY,aAAa"}